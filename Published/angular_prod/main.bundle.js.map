{"version":3,"sources":["webpack:///E:/GitHub/game-of-drones/AngularApp/src async","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/app.component.css","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/app.component.html","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/app.component.ts","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/app.module.ts","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/core/core.module.ts","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/core/match/match.component.html","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/core/match/match.component.ts","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/core/match/playerMove.model.ts","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/core/match/possibleMoves.model.ts","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/core/match/result.component.html","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/core/match/result.component.ts","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/core/models/currentPlayer.model.ts","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/core/models/currentPlayers.abstracts.service.ts","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/core/models/currentPlayers.service.ts","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/core/startPage/startPage.component.html","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/core/startPage/startPage.component.ts","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/startup/firstNavigation.guard.ts","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/startup/routesNames.ts","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/statistics/playerDataSource.abstracts.model.ts","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/statistics/playerDataSource.model.ts","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/statistics/statistics.component.html","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/statistics/statistics.component.ts","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/statistics/statistics.module.ts","webpack:///E:/GitHub/game-of-drones/AngularApp/src/app/statistics/webService.config.ts","webpack:///E:/GitHub/game-of-drones/AngularApp/src/environments/environment.ts","webpack:///E:/GitHub/game-of-drones/AngularApp/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/GitHub/game-of-drones/AngularApp/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/GitHub/game-of-drones/AngularApp/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container mt-5\\\">\\n    <router-outlet></router-outlet>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/GitHub/game-of-drones/AngularApp/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent { }\n\n\n\n// WEBPACK FOOTER //\n// E:/GitHub/game-of-drones/AngularApp/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { MatchComponent } from './core/match/match.component';\nimport { FirstNavigationGuard } from './startup/firstNavigation.guard';\nimport { ResultComponent } from './core/match/result.component';\nimport { RoutesNames } from './startup/routesNames';\nimport { StartPageComponent } from './core/startPage/startPage.component';\nimport { StatisticsComponent } from './statistics/statistics.component';\nimport { StatisticsModule } from './statistics/statistics.module';\n\n@NgModule({\n  imports: [BrowserModule, CoreModule, RouterModule.forRoot([\n    {\n      path: RoutesNames.StartPage, component: StartPageComponent,\n      canActivate: [FirstNavigationGuard]\n    },\n    {\n      path: RoutesNames.MatchPage, component: MatchComponent,\n      canActivate: [FirstNavigationGuard]\n    },\n    {\n      path: RoutesNames.ResultsPage, component: ResultComponent,\n      canActivate: [FirstNavigationGuard]\n    },\n    {\n      path: RoutesNames.StatisticsPage, component: StatisticsComponent,\n    },\n    { path: '**', redirectTo: `/${RoutesNames.StartPage}` }\n  ]), StatisticsModule],\n  declarations: [AppComponent],\n  providers: [FirstNavigationGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// E:/GitHub/game-of-drones/AngularApp/src/app/app.module.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { CurrentPlayer } from './models/currentPlayer.model';\r\nimport { ICurrentPlayersServices, CurrentPlayersServices_TKN } from './models/currentPlayers.abstracts.service';\r\nimport { CurrentPlayersServices } from './models/currentPlayers.service';\r\nimport { MatchComponent } from './match/match.component';\r\nimport { ResultComponent } from './match/result.component';\r\nimport { StartPageComponent } from './startPage/startPage.component';\r\n\r\n/**\r\n * Angular's featur module for the core components.\r\n */\r\n@NgModule({\r\n  imports: [BrowserModule, FormsModule, RouterModule],\r\n  declarations: [StartPageComponent, MatchComponent, ResultComponent],\r\n  exports: [StartPageComponent, MatchComponent, ResultComponent],\r\n  providers: [\r\n    { provide: CurrentPlayersServices_TKN, useClass: CurrentPlayersServices }\r\n  ],\r\n})\r\nexport class CoreModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// E:/GitHub/game-of-drones/AngularApp/src/app/core/core.module.ts","module.exports = \"<div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-sm-10 col-lg-6 col-xl-4\\\">\\r\\n        <h2 class=\\\"text-center\\\">Round #{{roundNumber}}</h2>\\r\\n        <hr />\\r\\n\\r\\n        <!-- [TODO] I don't like this approach. -->\\r\\n        <h3>{{turnNumber === 1 ? player1Move.Player.Name : player2Move.Player.Name}}</h3>\\r\\n        <form id=\\\"matchForm\\\" novalidate #form=\\\"ngForm\\\" (ngSubmit)=\\\"submit(form)\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <label class=\\\"col-4 col-form-label\\\" for=\\\"currentPlayerMove\\\">Select Move:</label>\\r\\n                    <div class=\\\"col-8\\\">\\r\\n                        <select id=\\\"currentPlayerMove\\\" name=\\\"currentPlayerMove\\\" class=\\\"form-control\\\" [class.submitted]=\\\"submitted\\\">\\r\\n                          <option disabled selected value=\\\"\\\"></option>\\r\\n                          <option *ngFor=\\\"let item of possibleMoves\\\" [ngValue]=\\\"item\\\">{{item}}</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <small *ngIf=\\\"submitted && invalid\\\" class=\\\"text-danger\\\">\\r\\n                          *You must select a move.\\r\\n                        </small>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row mb-0\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <button class=\\\"btn btn-outline-primary btn-block\\\" type=\\\"submit\\\">Ok</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"col-1\\\" [hidden]=\\\"roundNumber <= 1\\\"></div>\\r\\n    <div class=\\\"col-sm-10 col-lg-6 col-xl-4\\\" [hidden]=\\\"roundNumber <= 1\\\">\\r\\n        <h3 class=\\\"text-left\\\">Score</h3>\\r\\n        <hr />\\r\\n        <table class=\\\"table table-sm\\\">\\r\\n            <thead class=\\\"thead-default\\\">\\r\\n                <tr class=\\\"text-center\\\">\\r\\n                    <th>Round</th>\\r\\n                    <th>Winner</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let result of roundsScores; let i = index\\\" class=\\\"text-center\\\">\\r\\n                    <td>{{i + 1}}</td>\\r\\n                    <td>{{result}}</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/GitHub/game-of-drones/AngularApp/src/app/core/match/match.component.html\n// module id = ../../../../../src/app/core/match/match.component.html\n// module chunks = 1","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { CurrentPlayer } from '../models/currentPlayer.model';\r\nimport { ICurrentPlayersServices, CurrentPlayersServices_TKN } from '../models/currentPlayers.abstracts.service';\r\nimport { PlayerMove } from './playerMove.model';\r\nimport { PossibleMoves } from './possibleMoves.model';\r\nimport { RoutesNames } from '../../startup/routesNames';\r\n\r\n/**\r\n * Represents the match component of our application.\r\n */\r\n@Component({\r\n  templateUrl: 'match.component.html'\r\n})\r\nexport class MatchComponent implements OnInit {\r\n  /**\r\n   * Specifies wether the form has been submitted or not.\r\n   */\r\n  submitted: boolean;\r\n  /**\r\n   * Specifies wether the player has selected a move or not.\r\n   */\r\n  invalid: boolean;\r\n  /**\r\n   * Specifies the current round number.\r\n   */\r\n  roundNumber: number;\r\n  /**\r\n   * Specifies the current turn number within the round.\r\n   */\r\n  turnNumber: number;\r\n  /**\r\n   * Represents the current turn's move for the player 1.\r\n   */\r\n  player1Move: PlayerMove;\r\n  /**\r\n   * Represents the current turn's move for the player 1.\r\n   */\r\n  player2Move: PlayerMove;\r\n  /**\r\n   * Represents the result of the previous rounds by storing the name of the winner or [TIE] in case of a tie.\r\n   */\r\n  roundsScores: Array<string>;\r\n  /**\r\n   * Represents the list of possible moves to perform by a player.\r\n   */\r\n  possibleMoves = [\r\n    PossibleMoves[PossibleMoves.Rock],\r\n    PossibleMoves[PossibleMoves.Paper],\r\n    PossibleMoves[PossibleMoves.Scissors]\r\n  ];\r\n\r\n  constructor( @Inject(CurrentPlayersServices_TKN) private _playersServices: ICurrentPlayersServices,\r\n    private _router: Router) { }\r\n  ngOnInit(): void {\r\n    this.reset();\r\n  }\r\n\r\n  /**\r\n   * Process the move selected by the player and, if necessary, proclames a winer.\r\n   */\r\n  submit(form: NgForm) {\r\n    this.submitted = true;\r\n\r\n    // [TODO] I don't like this approach\r\n    const element = document.getElementById('currentPlayerMove') as HTMLSelectElement;\r\n    const value = element.value;\r\n\r\n    this.invalid = value == null || value === '';\r\n    if (this.invalid) {\r\n      return;\r\n    }\r\n\r\n    if (this.turnNumber === 1) {\r\n      this.player1Move.Move = PossibleMoves[value];\r\n      this.setNextTurn();\r\n    } else {\r\n      this.player2Move.Move = PossibleMoves[value];\r\n      this.processRound();\r\n    }\r\n\r\n    this.submitted = false;\r\n    this.resetForm();\r\n  }\r\n  private setNextTurn() {\r\n    this.turnNumber++;\r\n  }\r\n  private processRound() {\r\n    const winner = this.calculateRoundWinner();\r\n    if (winner == null) {\r\n      this.roundsScores.push('[TIE]');\r\n    } else {\r\n      this.roundsScores.push(winner.Name);\r\n\r\n      winner.WonRounds++;\r\n      if (winner.WonRounds === 3) {\r\n        this._router.navigateByUrl(`/${RoutesNames.ResultsPage}`);\r\n      }\r\n    }\r\n\r\n    this.roundNumber++;\r\n    this.resetTurn();\r\n  }\r\n  private calculateRoundWinner(): CurrentPlayer {\r\n\r\n    if (this.player1Move.Move === this.player2Move.Move) {\r\n      return null;\r\n    }\r\n\r\n    const winByRock = this.player1Move.Move === PossibleMoves.Rock && this.player2Move.Move === PossibleMoves.Scissors;\r\n    const winByPaper = this.player1Move.Move === PossibleMoves.Paper && this.player2Move.Move === PossibleMoves.Rock;\r\n    const winByScissors = this.player1Move.Move === PossibleMoves.Scissors && this.player2Move.Move === PossibleMoves.Paper;\r\n\r\n    return (winByRock || winByPaper || winByScissors) ? this.player1Move.Player : this.player2Move.Player;\r\n  }\r\n\r\n  private reset() {\r\n    this.roundNumber = 1;\r\n    this.roundsScores = new Array<string>();\r\n\r\n    this.resetTurn();\r\n  }\r\n  private resetTurn() {\r\n    this.turnNumber = 1;\r\n\r\n    this.player1Move = new PlayerMove(this._playersServices.Player1, null);\r\n    this.player2Move = new PlayerMove(this._playersServices.Player2, null);\r\n\r\n    this.resetForm();\r\n  }\r\n  private resetForm() {\r\n    // [TODO] I don't like this:\r\n    const form = document.getElementById('matchForm') as HTMLFormElement;\r\n    form.reset();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/GitHub/game-of-drones/AngularApp/src/app/core/match/match.component.ts","import { CurrentPlayer } from '../models/currentPlayer.model';\r\nimport { PossibleMoves } from './possibleMoves.model';\r\n\r\n/**\r\n * Represents a move performed by a Player.\r\n */\r\nexport class PlayerMove {\r\n  constructor(private _player: CurrentPlayer, private _move?: PossibleMoves) {};\r\n\r\n  /**\r\n   * Gets the player that performed the move.\r\n   */\r\n  get Player(): CurrentPlayer {\r\n    return this._player;\r\n  }\r\n\r\n  /**\r\n   * Gets/Sets the move performed.\r\n   */\r\n  get Move(): PossibleMoves {\r\n    return this._move;\r\n  }\r\n  set Move(move: PossibleMoves) {\r\n    this._move = move;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/GitHub/game-of-drones/AngularApp/src/app/core/match/playerMove.model.ts","/**\r\n * Available moves for the Rock, Paper, Scissors game.\r\n */\r\nexport enum PossibleMoves {\r\n  Rock,\r\n  Paper,\r\n  Scissors,\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/GitHub/game-of-drones/AngularApp/src/app/core/match/possibleMoves.model.ts","module.exports = \"<div class=\\\"row align-items-center justify-content-center\\\">\\r\\n    <div class=\\\"col-sm-10 col-lg-8 col-xl-6\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n            <h2>We have a WINNER!!</h2>\\r\\n            <br>\\r\\n            <h2>{{Winner.Name}} is the new EMPEROR</h2>\\r\\n            <br>\\r\\n            <a class=\\\"btn btn-outline-primary\\\" [routerLink]=\\\"StartPageRouterLink\\\">Play Again</a>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/GitHub/game-of-drones/AngularApp/src/app/core/match/result.component.html\n// module id = ../../../../../src/app/core/match/result.component.html\n// module chunks = 1","import { Component, Inject, AfterViewInit } from '@angular/core';\r\n\r\nimport { CurrentPlayer } from '../models/currentPlayer.model';\r\nimport { ICurrentPlayersServices, CurrentPlayersServices_TKN } from '../models/currentPlayers.abstracts.service';\r\nimport { RoutesNames } from '../../startup/routesNames';\r\nimport { PlayerDataSource_TKN, IPlayerDataSource } from '../../statistics/playerDataSource.abstracts.model';\r\nimport { PlayerInfo } from '../../statistics/playerInfo.model';\r\n\r\n/**\r\n * Represents the result page of a finished match.\r\n */\r\n@Component({\r\n  templateUrl: 'result.component.html'\r\n})\r\nexport class ResultComponent implements AfterViewInit {\r\n  /**\r\n   * Specifies the start page route link.\r\n   */\r\n  readonly StartPageRouterLink = `/${RoutesNames.StartPage}`;\r\n\r\n  constructor( @Inject(CurrentPlayersServices_TKN) private _playersServices: ICurrentPlayersServices,\r\n    @Inject(PlayerDataSource_TKN) private _dataSource: IPlayerDataSource) {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this._dataSource.registerWin(this.Winner.Name).subscribe();\r\n  }\r\n\r\n  /**\r\n   * Gets the player with most rounds won.\r\n   */\r\n  get Winner() {\r\n    return this._playersServices.Player1.WonRounds > this._playersServices.Player2.WonRounds\r\n      ? this._playersServices.Player1\r\n      : this._playersServices.Player2;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/GitHub/game-of-drones/AngularApp/src/app/core/match/result.component.ts","/**\r\n * Model class that represents the name and\r\n * won round for an user on an on-going match.\r\n */\r\nexport class CurrentPlayer {\r\n  private _name: string;\r\n  private _wonRounds = 0;\r\n\r\n  /**\r\n   * Gets the name of the player.\r\n   */\r\n  get Name(): string {\r\n    return this._name;\r\n  }\r\n  /**\r\n   * Sets the name of the player.\r\n   */\r\n  set Name(name: string){\r\n    this._name = name;\r\n  }\r\n\r\n  /**\r\n   * Gets the amount of rounds won by the player.\r\n   */\r\n  get WonRounds(): number{\r\n    return this._wonRounds;\r\n  }\r\n  /**\r\n   * Sets the amount of rounds won by the player.\r\n   */\r\n  set WonRounds(wonRounds: number) {\r\n    this._wonRounds = wonRounds;\r\n  }\r\n\r\n  /**\r\n   * Creates a new instance of a player.\r\n   */\r\n  constructor() { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/GitHub/game-of-drones/AngularApp/src/app/core/models/currentPlayer.model.ts","import { OpaqueToken } from '@angular/core';\r\nimport { CurrentPlayer } from './currentPlayer.model';\r\n\r\n/**\r\n * Used to allow SOLID and Angular's DI.\r\n */\r\nexport const CurrentPlayersServices_TKN = new OpaqueToken('ICurrentPlayersServices')\r\n\r\n/**\r\n * Defines the set of services defined over the Current Player model.\r\n */\r\nexport interface ICurrentPlayersServices {\r\n  /**\r\n   * Gets the Player1.\r\n   */\r\n  Player1: CurrentPlayer;\r\n  /**\r\n   * Gets the Player2.\r\n   */\r\n  Player2: CurrentPlayer;\r\n\r\n  /**\r\n   * Restar the models by creating new instances of them,\r\n   * withouth a name and with 0 wins.\r\n   */\r\n  reset(): void;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/GitHub/game-of-drones/AngularApp/src/app/core/models/currentPlayers.abstracts.service.ts","import { Injectable } from '@angular/core';\r\nimport { CurrentPlayer } from './currentPlayer.model';\r\nimport { ICurrentPlayersServices } from './currentPlayers.abstracts.service';\r\n\r\n/**\r\n * Basic implementation of the defined services for the Current Player model.\r\n */\r\n@Injectable()\r\nexport class CurrentPlayersServices implements ICurrentPlayersServices {\r\n  private _player1: CurrentPlayer;\r\n  private _player2: CurrentPlayer;\r\n\r\n  /**\r\n   * Creates a new instance of CurrentPlayersServices.\r\n   */\r\n  constructor() {\r\n    this.reset();\r\n  }\r\n\r\n  /**\r\n   * Gets the Player1.\r\n   */\r\n  get Player1(): CurrentPlayer {\r\n    return this._player1;\r\n  };\r\n  /**\r\n   * Gets the Player2.\r\n   */\r\n  get Player2(): CurrentPlayer {\r\n    return this._player2;\r\n  }\r\n\r\n  /**\r\n   * Restar the models by creating new instances of them,\r\n   * withouth a name and with 0 wins.\r\n   */\r\n  reset(): void {\r\n    this._player1 = new CurrentPlayer();\r\n    this._player2 = new CurrentPlayer();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/GitHub/game-of-drones/AngularApp/src/app/core/models/currentPlayers.service.ts","module.exports = \"<div class=\\\"row align-items-center justify-content-center\\\">\\r\\n    <div class=\\\"col-sm-10 col-lg-8 col-xl-6\\\">\\r\\n        <h2 class=\\\"text-center\\\">Enter the Player's Names</h2>\\r\\n        <hr />\\r\\n        <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <small *ngIf=\\\"HaveSameNames && submitted\\\" class=\\\"text-danger\\\">* You cannot play against yourself.</small>\\r\\n            </div>\\r\\n        </div>\\r\\n        <form id=\\\"startPageForm\\\" novalidate #form=\\\"ngForm\\\" (ngSubmit)=\\\"submit(form)\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <label class=\\\"col-3 col-lg-2 col-form-label\\\" for=\\\"player1Name\\\">Player 1:</label>\\r\\n                    <div class=\\\"col-9 col-lg-10\\\">\\r\\n                        <input id=\\\"player1Name\\\" name=\\\"player1Name\\\" class=\\\"form-control custom-validation\\\" type=\\\"text\\\" placeholder=\\\"John Doe\\\" #player1Name=\\\"ngModel\\\" [(ngModel)]=\\\"Player1.Name\\\" [class.submitted]=\\\"submitted\\\" [class.invalid]=\\\"HaveSameNames\\\" required>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <small *ngIf=\\\"submitted && player1Name.invalid\\\" class=\\\"text-danger\\\">\\r\\n                          *The player's name is required.\\r\\n                        </small>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <label class=\\\"col-3 col-lg-2 col-form-label\\\" for=\\\"player2Name\\\">Player 2:</label>\\r\\n                    <div class=\\\"col-9 col-lg-10\\\">\\r\\n                        <input id=\\\"player2Name\\\" name=\\\"player2Name\\\" class=\\\"form-control custom-validation\\\" type=\\\"text\\\" placeholder=\\\"Jane Doe\\\" #player2Name=\\\"ngModel\\\" [(ngModel)]=\\\"Player2.Name\\\" [class.submitted]=\\\"submitted\\\" [class.invalid]=\\\"HaveSameNames\\\" required>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <small *ngIf=\\\"submitted && player2Name.invalid\\\" class=\\\"text-danger\\\">\\r\\n                          *The player's name is required.\\r\\n                        </small>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row mb-0\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                    <button class=\\\"btn btn-outline-primary btn-block\\\" type=\\\"submit\\\">Start</button>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row small justify-content-end\\\">\\r\\n                <div class=\\\"col text-right\\\">\\r\\n                    <a [routerLink]=\\\"StatisticsRouterLink\\\">(View players' records)</a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/GitHub/game-of-drones/AngularApp/src/app/core/startPage/startPage.component.html\n// module id = ../../../../../src/app/core/startPage/startPage.component.html\n// module chunks = 1","import { Component, Inject } from '@angular/core';\r\nimport { Router, Event, NavigationEnd } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { CurrentPlayer } from '../models/currentPlayer.model';\r\nimport { ICurrentPlayersServices, CurrentPlayersServices_TKN } from '../models/currentPlayers.abstracts.service';\r\nimport { RoutesNames } from '../../startup/routesNames';\r\n\r\n/**\r\n * Represents the start page of our application.\r\n */\r\n@Component({\r\n  templateUrl: 'startPage.component.html',\r\n})\r\nexport class StartPageComponent {\r\n  /**\r\n   * Specifies the statistics page route link.\r\n   */\r\n  readonly StatisticsRouterLink = `/${RoutesNames.StatisticsPage}`;\r\n  /**\r\n   * Specify wether the form has been submitted or not.\r\n   */\r\n  submitted: boolean;\r\n\r\n  constructor( @Inject(CurrentPlayersServices_TKN) private _playersServices: ICurrentPlayersServices,\r\n    private _router: Router) {\r\n\r\n    this._router.events.subscribe(\r\n      (event: Event) => {\r\n        if (event instanceof NavigationEnd && event.urlAfterRedirects === `/${RoutesNames.StartPage}`) {\r\n          this.restart();\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Gets the First player.\r\n   */\r\n  get Player1(): CurrentPlayer {\r\n    return this._playersServices.Player1;\r\n  }\r\n  /**\r\n   * Gets the Second player.\r\n   */\r\n  get Player2(): CurrentPlayer {\r\n    return this._playersServices.Player2;\r\n  }\r\n  /**\r\n   * Convenience property to know whether both names have been entered the same.\r\n   */\r\n  get HaveSameNames(): boolean {\r\n    return this.Player1.Name != null\r\n      && this.Player1.Name !== ''\r\n      && this.Player1.Name === this.Player2.Name;\r\n  }\r\n\r\n  /**\r\n   * Validates the entered player's information and, if valid, redirect to the match component.\r\n   * @param form The template's form.\r\n   */\r\n  submit(form: NgForm) {\r\n    this.submitted = true;\r\n    if (!form.valid || this.HaveSameNames) {\r\n      return;\r\n    }\r\n\r\n    this._router.navigateByUrl(`/${RoutesNames.MatchPage}`);\r\n  }\r\n\r\n  /**\r\n   * Used to restart the component to an initial state.\r\n   */\r\n  restart() {\r\n    this.submitted = false;\r\n    this._playersServices.reset();\r\n\r\n    // [TODO] I don't like this:\r\n    const form = document.getElementById('startPageForm') as HTMLFormElement;\r\n    form.reset();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/GitHub/game-of-drones/AngularApp/src/app/core/startPage/startPage.component.ts","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Router, CanActivate } from '@angular/router';\r\n\r\nimport { StartPageComponent } from '../core/startPage/startPage.component';\r\nimport { StatisticsComponent } from '../statistics/statistics.component';\r\n\r\n/**\r\n * This route guard, guards that certain pages cannot be accessed\r\n * unless StartPage component has been accessed first.\r\n * It should be applied to the StartPage and to any other component that\r\n * requires a previous access to the StartPage.\r\n */\r\n@Injectable()\r\nexport class FirstNavigationGuard implements CanActivate {\r\n  private _firstNavigation = true;\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if (!this._firstNavigation) {\r\n      return true;\r\n    }\r\n\r\n    if (route.component === StartPageComponent) {\r\n      this._firstNavigation = false;\r\n      return true;\r\n    }\r\n\r\n    this.router.navigateByUrl('/');\r\n    return false;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/GitHub/game-of-drones/AngularApp/src/app/startup/firstNavigation.guard.ts","export class RoutesNames {\r\n  static readonly StartPage = 'start';\r\n  static readonly MatchPage = 'match';\r\n  static readonly ResultsPage = 'result';\r\n  static readonly StatisticsPage = 'records';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/GitHub/game-of-drones/AngularApp/src/app/startup/routesNames.ts","import { OpaqueToken } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { PlayerInfo } from './playerInfo.model';\r\n\r\n/**\r\n * Used to allow SOLID and Angular's DI.\r\n */\r\nexport const PlayerDataSource_TKN = new OpaqueToken('IPlayerDataSource')\r\n\r\n/**\r\n * Represents the data access to the player's web services.\r\n */\r\nexport interface IPlayerDataSource {\r\n\r\n  /**\r\n   * Retrieve the list of all the players from the data source.\r\n   */\r\n  getAll(): Observable<PlayerInfo[]>;\r\n\r\n  /**\r\n   * Register a new win on the data source.\r\n   */\r\n  registerWin(name: string): Observable<PlayerInfo>;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/GitHub/game-of-drones/AngularApp/src/app/statistics/playerDataSource.abstracts.model.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Request, RequestMethod } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { PlayerInfo } from './playerInfo.model';\r\nimport { IPlayerDataSource } from './playerDataSource.abstracts.model';\r\nimport { WebServiceConfig } from './webService.config';\r\n\r\n/**\r\n * Rest client implementation of the player data source.\r\n */\r\n@Injectable()\r\nexport class PlayerRestClient implements IPlayerDataSource {\r\n  private _baseUrl: string;\r\n\r\n  constructor(private http: Http, webServiceConfig: WebServiceConfig) {\r\n    this._baseUrl = `${webServiceConfig.PROTOCOL}://${location.hostname}:${webServiceConfig.PORT}/api/`\r\n  }\r\n\r\n  /**\r\n   * Retrieve the list of all the players from the data source.\r\n   */\r\n  getAll(): Observable<PlayerInfo[]> {\r\n    return this.sendRequest(RequestMethod.Get, 'PlayersStatistics');\r\n  }\r\n\r\n  /**\r\n   * Register a new win on the data source.\r\n   */\r\n  registerWin(name: string): Observable<PlayerInfo> {\r\n    return this.sendRequest(RequestMethod.Post, `PlayersStatistics?name=${name}`);\r\n  }\r\n\r\n  private sendRequest(verb: RequestMethod, url: string) {\r\n\r\n    const request = new Request({\r\n      method: verb,\r\n      url: this._baseUrl + url,\r\n    });\r\n    return this.http.request(request).map(response => {\r\n        const data = response.json();\r\n        return data;\r\n      });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/GitHub/game-of-drones/AngularApp/src/app/statistics/playerDataSource.model.ts","module.exports = \"<div class=\\\"row align-items-center justify-content-center\\\">\\r\\n    <div class=\\\"col-sm-10 col-lg-8\\\">\\r\\n        <h2 class=\\\"text-center\\\">\\r\\n            <a class=\\\"btn btn-primary float-left\\\" [routerLink]=\\\"StartPageRouterLink\\\">Start Page</a>\\r\\n            <span>Players records</span>\\r\\n        </h2>\\r\\n        <hr>\\r\\n        <div [hidden]=\\\"loading\\\">\\r\\n            <table id=\\\"dataTable\\\" class=\\\"table dataTable table-small table-striped display\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\">\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>Name</th>\\r\\n                        <th>Wins</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tfoot>\\r\\n                    <tr>\\r\\n                        <th>Name</th>\\r\\n                        <th>Wins</th>\\r\\n                    </tr>\\r\\n                </tfoot>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let player of playersRecord\\\">\\r\\n                        <td>{{player.name}}</td>\\r\\n                        <td>{{player.wins}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <div [hidden]=\\\"!loading\\\" class=\\\"text-center\\\">\\r\\n            <h6>Loading...</h6>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/GitHub/game-of-drones/AngularApp/src/app/statistics/statistics.component.html\n// module id = ../../../../../src/app/statistics/statistics.component.html\n// module chunks = 1","import { Component, AfterViewInit, Inject } from '@angular/core';\r\nimport { Router, Event, NavigationEnd } from '@angular/router';\r\ndeclare var jquery: any;\r\ndeclare var $: any;\r\n\r\nimport { PlayerInfo } from './playerInfo.model';\r\nimport { RoutesNames } from '../startup/routesNames';\r\nimport { PlayerDataSource_TKN, IPlayerDataSource } from './playerDataSource.abstracts.model';\r\n\r\n/**\r\n * Represents the statistics page of the application\r\n */\r\n@Component({\r\n  templateUrl: 'statistics.component.html'\r\n})\r\nexport class StatisticsComponent implements AfterViewInit {\r\n  /**\r\n   * Specifies the statistics page route link.\r\n   */\r\n  readonly StartPageRouterLink = `/${RoutesNames.StartPage}`;\r\n\r\n  /**\r\n   * Set of recorded players of the application.\r\n   */\r\n  playersRecord: Array<PlayerInfo>;\r\n\r\n  loading = false;\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor(@Inject(PlayerDataSource_TKN) private _dataSource: IPlayerDataSource) {}\r\n  /**\r\n   * Used to apply the data table styles\r\n   */\r\n  ngAfterViewInit(): void {\r\n    this.restart();\r\n  }\r\n\r\n  // [TODO] I don't like this approach.\r\n  private restart() {\r\n    this.loading = true;\r\n\r\n    this._dataSource.getAll().subscribe(data => {\r\n      this.playersRecord = data;\r\n\r\n      setTimeout(() => {\r\n        $('#dataTable').DataTable({ 'order': [[1, 'desc'], [0, 'asc']] }).draw();\r\n        this.loading = false;\r\n\r\n      }, 1000)\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/GitHub/game-of-drones/AngularApp/src/app/statistics/statistics.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpModule } from '@angular/http';\r\n\r\nimport { PlayerDataSource_TKN } from './playerDataSource.abstracts.model';\r\nimport { PlayerRestClient } from './playerDataSource.model';\r\nimport { StatisticsComponent } from './statistics.component';\r\nimport { WebServiceConfig } from './webService.config';\r\n\r\n/**\r\n * Angular's feature module for the statistics components.\r\n */\r\n@NgModule({\r\n  imports: [BrowserModule, RouterModule, HttpModule],\r\n  declarations: [StatisticsComponent],\r\n  exports: [StatisticsComponent],\r\n  providers: [ WebServiceConfig,\r\n    { provide: PlayerDataSource_TKN, useClass: PlayerRestClient }\r\n  ]\r\n})\r\nexport class StatisticsModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// E:/GitHub/game-of-drones/AngularApp/src/app/statistics/statistics.module.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class WebServiceConfig {\r\n  readonly PROTOCOL = 'http';\r\n  readonly URL = 'localhost';\r\n  readonly PORT = '7683';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/GitHub/game-of-drones/AngularApp/src/app/statistics/webService.config.ts","export const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// E:/GitHub/game-of-drones/AngularApp/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// E:/GitHub/game-of-drones/AngularApp/src/main.ts"],"sourceRoot":""}